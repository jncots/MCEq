name: Build_with_cibuildwheel_and_upload_to_PyPI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'MCEq/**'
      - '!MCEq/data/README.md'
    tags:        
      - 'release**' 
  pull_request:
    types:
      - opened
    branches:    
      - master
    paths:
      - 'MCEq/**'
      - '!MCEq/data/README.md'

jobs:
    make_sdist:
      name: Make SDist
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Build SDist
          run: pipx run build --sdist

        - uses: actions/upload-artifact@v3
          with:
            path: dist/*.tar.gz
            
    build_wheels:
      name: Wheel on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-20.04, windows-2019, macos-10.15]

      steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
 
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0
        env:
          CIBW_SKIP: "*-win32 *linux_i686 pp* *musllinux*"
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_ARCHS_LINUX: "auto aarch64"
          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64 *-*linux_{aarch64,ppc64le,s390x}"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest {package}/MCEq/tests
      
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

    upload_all_to_PyPI:
      name: Upload to PyPI
      needs: [build_wheels, make_sdist]
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      steps:
        - name: Download files in artifact to "dist/" directory
          uses: actions/download-artifact@v3
          with:
            name: artifact
            path: dist
      
        - name: Publish the package to PyPI
          uses: pypa/gh-action-pypi-publish@v1.5.0
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}
